version: 2.1

aliases:
  - &restore_gradle_cache
    key: jars-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "build.gradle" }}
  - &save_gradle_cache
    key: jars-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "build.gradle" }}
    paths:
      - ~/.gradle/caches
      - ~/.gradle/wrapper
  - &install_bundle
    name: Install bundle dependencies
    command: |
      cd script/danger
      bundle check || bundle install

attach_workspace: &attach_workspace
  attach_workspace:
    at: .

store_reports: &store_reports
  store_artifacts:
    path: app/build/reports

store_test_resulst: &store_test_results
  store_test_results:
    path: app/build/test-results

commands:
  attach_restore_workspace:
    description: Restore the workspace from cache
    steps:
      - checkout
      - *attach_workspace
      - restore_cache: *restore_gradle_cache

config: &config
  working_directory: ~/danger
  docker:
    - image: circleci/android:api-28-alpha
  parallelism: 1
  environment:
    TERM: dumb

jobs:
  checkout_code:
    <<: *config
    steps:
      - checkout
      - restore_cache: *restore_gradle_cache
      - run:
          name: Install dependencies
          command: ./gradlew dependencies
      - save_cache: *save_gradle_cache

  lint:
    <<: *config
    steps:
      - attach_restore_workspace
      - run:
          name: Lint
          command: ./gradlew lint
      - *store_reports
      - save_cache: *save_gradle_cache
      - persist_to_workspace:
          root: app
          paths:
            - build/reports/lint-results.xml

  detekt:
    <<: *config
    steps:
      - attach_restore_workspace
      - run:
          name: Detekt
          command: ./gradlew detekt
      - *store_reports
      - save_cache: *save_gradle_cache
      - persist_to_workspace:
          root: app
          paths:
            - build/reports/detekt/detekt.xml

  test:
    <<: *config
    steps:
      - attach_restore_workspace
      - run:
          name: Test
          command: ./gradlew test
      - *store_test_results
      - save_cache: *save_gradle_cache

  danger_assert:
    <<: *config
    steps:
      - attach_restore_workspace
      - run: *install_bundle
      - run:
          name: Danger assertions
          command: script/danger_assert

  danger_apk_stat:
    <<: *config
    steps:
      - attach_restore_workspace
      - run: *install_bundle
      - run:
          name: Danger APK stats
          command: script/danger_compare_apk

  assemble:
    <<: *config

    steps:
      - attach_restore_workspace

      - run:
          name: Assemble
          command: ./gradlew assemble
      - store_artifacts:
          path: app/build/outputs
      - run:
          name: Fetch lastet release
          command: script/download_latest_apk latest-release.apk
      - save_cache: *save_gradle_cache
      - persist_to_workspace:
          root: app
          paths:
            - build/outputs/apk/release/*.apk

  publish-github-release:
    working_directory: ~/danger
    docker:
      - image: cibuilds/github:0.10
    steps:
      - attach_workspace:
          at: app
      - run:
          name: "Publish Release on GitHub"
          command: |
            ghr -t ${DANGER_GITHUB_API_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_TAG} app/build/outputs/apk/release/danger-0.3-release-unsigned.apk

workflows:
  version: 2
  danger_check_assemble:
    jobs:
      - checkout_code
      - lint:
          requires:
            - checkout_code
      - detekt:
          requires:
            - checkout_code
      - test:
          requires:
            - checkout_code
      - assemble:
          requires:
            - lint
            - detekt
            - test
          filters:
            tags:
              only: /^\d+\.\d+$/
      - danger_assert:
          requires:
            - lint
            - detekt
            - test
      - danger_apk_stat:
          requires:
            - assemble
      - publish-github-release:
          requires:
            - assemble
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^\d+\.\d+$/